#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

#1. How many orders were placed in January?
    
SELECT 
    COUNT(*) AS Total_Order_Count
FROM BIT_DB.JanSales
    WHERE length(OrderID) = 6
    AND OrderID <> 'Order ID';
    
#2. How many of those orders were for an iPhone?

SELECT 
    COUNT(OrderID) AS total_order_count
FROM BIT_DB.JanSales
    WHERE Product = 'iPhone'
    AND length(OrderID) = 6
    AND OrderID <> 'Order ID';
    
#3. Select the customer account numbers for all the orders that were placed in February.

SELECT DISTINCT c.acctnum
FROM BIT_DB.customers c
INNER JOIN BIT_DB.FebSales fs
        ON c.order_id = fs.OrderID
    WHERE length(order_id) = 6
    AND order_id <> 'Order ID';
    
#4. Which product was the cheapest one sold in January, and what was the price?

SELECT  
    product, 
    MIN(price) AS MIN_price
FROM BIT_DB.JanSales
    GROUP BY product, price
    ORDER BY price ASC
    LIMIT 1;
      
SELECT DISTINCT
    product,
    price
FROM BIT_DB.JanSales
    WHERE price in (SELECT MIN(price)
                    FROM BIT_DB.JanSales);
                    
#5. What is the total revenue for each product sold in January?

SELECT product,
    ROUND(SUM(quantity) * price, 2) AS total_revenue    
FROM BIT_DB.JanSales
WHERE length(OrderID) = 6
    AND OrderID <> 'Order ID'
GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT product,
    SUM(quantity) AS total_sold,
    SUM(quantity) * price AS total_revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

SELECT COUNT(DISTINCT c.acctnum) AS customers,
    ROUND(AVG(fs.quantity * fs.price), 2) AS AVG_amount_spent
FROM BIT_DB.FebSales fs
LEFT JOIN BIT_DB.customers c
        ON c.order_id  = fs.OrderID
WHERE fs.quantity > 2
    AND length(OrderID) = 6
    AND OrderID <> 'Order ID';

# These next queries are used to filter data by date using the AND and LIKE operators. 

SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

SELECT location
FROM BIT_DB.FebSales
WHERE orderdate = '02/18/19 01:35';

SELECT sum(quantity)
FROM BIT_DB.FebSales
WHERE orderdate like '02/18/19%';

SELECT DISTINCT product
FROM BIT_DB.FebSales
WHERE product LIKE '%Batteries%';

SELECT DISTINCT product, price
FROM BIT_DB.FebSales
WHERE price LIKE '%.99';

#8. List all products sold in Los Angeles in February, and include how many of each were sold. 

SELECT product, 
    SUM(quantity) AS total_sold
FROM BIT_DB.FebSales
WHERE location LIKE '%Los Angeles%'
GROUP BY product;

